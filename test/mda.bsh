import org.micromanager.acquisition.TaggedImageStorageMultipageTiff;

import mmcorej.TaggedImage;
import org.micromanager.utils.MDUtils;
import org.micromanager.acquisition.MMAcquisition;

// clear all previous acquisitions
gui.closeAllAcquisitions();
gui.clearMessageWindow();

//gui.setAcquisitionAddImageAsynchronous();

// file locations
acqName = gui.getUniqueAcquisitionName("test");
rootDirName = "/Users/theoli89/Desktop/";

// parameters
channelGroup = "Illumination";
String[] channels = {"BF", "GFP"};
String[] shutters = {"DShutter", "DShutter"};
Color[] colors = {Color.WHITE, Color.GREEN};
int[] exposures = {200, 200};

numSlices = 5;
sliceStep = 300;

numFrames = 10;
frameInterval = 7000;

show = true;
save = true;

// Init acquisitions
gui.openAcquisition(acqName, rootDirName, numFrames, channels.length, numSlices, show, save);
gui.setImageSavingFormat(TaggedImageStorageMultipageTiff.class);

for (int i=0; i < colors.length; i++)
    gui.setChannelColor(acqName, i, colors[i]);

for (int i=0; i < channels.length; i++)
    gui.setChannelName(acqName, i, channels[i]);

zposition = mmc.getPosition(mmc.getFocusDevice());
z_start = zposition - (numSlices % 2) * sliceStep;

mmc.setAutoShutter(true);

// Run acquisitions loop

// Time first
for (int i=0; i < numFrames; i++){

    frameStart = System.currentTimeMillis();

    // Channel
    for (int j=0; j < channels.length; j++){

        mmc.setShutterDevice(shutters[j]);
        mmc.setExposure(exposures[j]);
        mmc.setConfig(channelGroup, channels[j]);
        mmc.waitForConfig(channelGroup, channels[j]);

        // Z
        for (int k=0; k < numSlices; k++){

            mmc.setPosition(mmc.getFocusDevice(), z_start + k * sliceStep);
            mmc.waitForDevice(mmc.getFocusDevice());

            gui.message("Acquiring frame: " + i + " - channel: " + j + " - Z: " + k);

            gui.snapAndAddImage(acqName, i, j, k, 0);

            
        }

    }

	//MMAcquisition acq = gui.getAcquisitionWithName(acqName);
	//for (int l=0; l < numSlices; l++){
	//	acq.getImageCache().getImage(gf_channel, l, i, 0);
    	// get last gfp z stack images
    	// and check end mitosis

	gui.message("Acquisition for frame: " + i + " is over.");

    if (i==0) {
        gui.setContrastBasedOnFrame(acqName, i, 0);
    }

    itTook = System.currentTimeMillis() - frameStart;
    if (itTook < frameInterval){
        timeToWait = frameInterval - itTook;
        gui.message("Wait for " + timeToWait + "ms");
        gui.sleep(timeToWait);
    }
}

gui.closeAcquisition(acqName);
